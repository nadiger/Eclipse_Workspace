package CHAPTER_9_THREADS;

public class ZTestThread {

	public static void main(String[] args) {
		System.out.println("Main Method called...");
//*********************		
		/*ThreadImplementsRunnable it = new ThreadImplementsRunnable();
		//it.start();
		Thread t = new Thread(it);
		System.out.println("State1:"+t.getState());
		t.start();
		System.out.println("IsAlive1: "+t.isAlive());
		System.out.println("State2:"+t.getState());
		System.out.println("IsAlive2: "+t.isAlive());
		System.out.println("State3:"+t.getState());
		System.out.println();
//*********************		
		ThreadExtendsThread tet = new ThreadExtendsThread();
		tet.start();
		System.out.println("IsAlive: "+tet.isAlive());
		
		System.out.println();
//*********************
		System.out.println("Multiple Threads accessing same startnable instance...");
		MultipleThreadOfExecution mul = new MultipleThreadOfExecution();
		Thread mult1 = new Thread(mul);
		mult1.start();
		System.out.println("IsAlive: "+mult1.isAlive());
		Thread mult2 = new Thread(mul);
		mult2.start();
		System.out.println("IsAlive: "+mult2.isAlive());
		Thread mult3 = new Thread(mul);
		mult3.start();
		System.out.println("IsAlive: "+mult3.isAlive());
		Thread mult4 = new Thread(mul);
		mult4.start();
		System.out.println("IsAlive: "+mult4.isAlive());
		
		System.out.println();*/
		
		/*RunnableThreadName runnableThread = new RunnableThreadName();
		Thread nt = new Thread(runnableThread);
		nt.setName("Niteesh");
		nt.start();
		
		System.out.println("Current Thread is \""+Thread.currentThread().getName()+"\"");
		*/
	/*	try{
		MultipleThreadAtOnce mtao = new MultipleThreadAtOnce();
		Thread mtao1 = new Thread(mtao);
		Thread mtao2 = new Thread(mtao);
		Thread mtao3 = new Thread(mtao);
		Thread mtao4 = new Thread(mtao);
		mtao1.setName("Alpha");
		mtao2.setName("Bravo");
		mtao3.setName("Charlie");
		mtao4.setName("Delta");
		mtao1.start();
		mtao2.start();
		mtao3.start();
		mtao4.start();
		//mtao3.start(); // java.lang.IllegalThreadStateException thrown here
		}
		catch(java.lang.IllegalThreadStateException e)
		{
			e.printStackTrace();
		}*/
		
		
		
		
//*********************
		
	}
}
